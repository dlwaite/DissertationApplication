{
  "operations": {

    "VenueList": {
      "httpMethod": "GET",
      "uri": "venue/list",
      "summary": "Multiple venue objects with selected fields. NB: You must filter resources retrieved from this end-point with at least one of the following request parameters: name, like, location, postcode.",
      "parameters": {
        "name": {
          "description": "The name of a venue.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "like" : {
          "description": "Unique identifier string of the venue for which you want a list of similar venues.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "location": {
          "description": "The location of events you want a listing for. Values should be prefixed with the type of location data you are submitting (name:, postcode:, geo:). NB: Values applied to this parameter with the name may be ambiguous E.G: Newcastle. Use location/search endpoint to find a unique location identifier (postcode or lat,lng) that matches the location you want.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "radius_distance": {
          "description": "The furthest distance from the location you want events listed for. NB: The location parameter is required when this parameter is set.",
          "type": "integer",
          "location": "query",
          "required": false
        },
        "distance_unit": {
          "description": "The unit of measurment that should be applied to the radius_distance value. NB: The location parameter is required when this parameter is set.",
          "enum": ["mi", "km"],
          "type": "string",
          "location": "query",
          "required": false
        },
        "postcode": {
          "description": "The postcode of the venue(s) you want a listing for. NB: This parameter will only produce a list of venues with the exact postcode given.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "incl_image": {
          "description": "Decides whether or not an venue image is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "image_size": {
          "description": "Chooses the size of image included with each venue object if one is available.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "full_description": {
          "description": "Decides whether full or summarised description text is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "incl_also_liked": {
          "description": "Decides whether or not a list of IDs for similar venues is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "updated_since": {
          "description": "Only retrive venues that have been added/updated since the given date.",
          "type": "date",
          "location": "query",
          "required": false
        },
        "results_per_page": {
          "description": "The number of results you want per page/chunk.",
          "enum": ["25", "50",  "75", "100"],
          "type": "integer",
          "required": false
        },
        "page": {
          "description": "The page/chunk of results to be requested.",
          "type": "integer",
          "location": "query",
          "required": false
        },
        "order_by": {
          "description": "Order events by the named object property.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "order_direction": {
          "description": "Ordering direction.",
          "enum": ["asc", "desc"],
          "type": "string",
          "location": "query",
          "required": false
        }
      }
    },

    "VenueRead": {
      "httpMethod": "GET",
      "uri": "venue/read",
      "summary": "A venue object with all fields.",
      "parameters": {
        "id": {
          "description": "Unique identifier string of the Venue you want full details for.",
          "type": "string",
          "location": "query",
          "required": true
        },
        "incl_events": {
          "description": "Decides whether or not a list of events at this venue at is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "incl_images": {
          "description": "Decides whether or not an venue images are included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "incl_also_liked": {
          "description": "Decides whether or not a list of IDs for similar venues is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "full_description": {
          "description": "Decides whether full or summarised description text is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        }
      }
    },
    
    "VenueEvents": {
      "httpMethod": "GET",
      "uri": "venue/events",
      "summary": "A list of events for a venue.",
      "parameters": {
        "id": {
          "description": "Unique identifier string of the Venue you want full details for.",
          "type": "string",
          "location": "query",
          "required": true
        },
        "incl_image": {
          "description": "Decides whether or not an event image is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "image_size": {
          "description": "Chooses the size of image included with each venue object if one is available.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "incl_stages" : {
          "description": "Decides whether or not a list of stages is included for any festival events in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "incl_artists" : {
          "description": "Decides whether or not a list of performing artists is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "incl_occurences" : {
          "description": "Decides whether or not a list of individual event occurrences is included for any repeat events in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "incl_tickets" : {
          "description": "Decides whether or not a list of available tickets is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "full_description": {
          "description": "Decides whether full or summarised description text is included in the response.",
          "type": "boolean",
          "location": "query",
          "required": false
        },
        "updated_since": {
          "description": "Only retrive venues that have been added/updated since the given date.",
          "type": "date",
          "location": "query",
          "required": false
        },
        "results_per_page": {
          "description": "The number of results you want per page/chunk.",
          "enum": ["25", "50",  "75", "100"],
          "type": "integer",
          "required": false
        },
        "page": {
          "description": "The page/chunk of results to be requested.",
          "type": "integer",
          "location": "query",
          "required": false
        },
        "order_by": {
          "description": "Order events by the named object property.",
          "type": "string",
          "location": "query",
          "required": false
        },
        "order_direction": {
          "description": "Ordering direction.",
          "enum": ["asc", "desc"],
          "type": "string",
          "location": "query",
          "required": false
        }
      }
    },

    "VenueImage": {
      "httpMethod": "GET",
      "uri": "venue/image",
      "summary": "A venue image retrieved as either a JSON object or JPEG image.",
      "parameters": {
        "id": {
          "description": "Unique identifier string of the venue you want an image for.",
          "type": "string",
          "location": "query",
          "required": true
        },
        "size": {
          "description": "Size of image you want.",
          "enum": ["small", "medium", "large"],
          "type": "string",
          "location": "query",
          "required": false
        },
        "format": {
          "description": "The format of the response you want back from the resource",
          "enum": ["json", "file"],
          "type": "string",
          "location": "query",
          "required": false
        }
      }
    },

    "VenueWidget": {
      "httpMethod": "GET",
      "uri": "venue/widget",
      "summary": "Return widget data for venue based event listings.",
      "parameters": {
        "id": {
          "description": "Unique identifier string of the Venue you want widget data for.",
          "type": "string",
          "location": "query",
          "required": true
        },
        "encode": {
          "description": "The character encoding for the data response.",
          "type": "string",
          "location": "query",
          "required": false
        }
      }
    }
  }
}
